/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clientShashki;
import java.io.*;
import javax.swing.*;

/**
 *
 * @author Александра
 */
public class GameMenu extends javax.swing.JFrame implements ServerEventListener{
    private final Client client;
    private final Player player;
    /**
     * Creates new form Menu
     * @param client
     * @param player
     */
    public GameMenu(Client client, Player player) {
        this.client = client;
        this.player = player;
        initializeListener();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        joinButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        joinButton.setText("Войти в игру");
        joinButton.setToolTipText("");
        joinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Введите имя комнаты");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(joinButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(joinButton)
                .addGap(187, 187, 187))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initializeListener(){
        client.setListener(this);
    }
    
    private void joinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinButtonActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Введите название комнаты!");
            jTextField1.grabFocus();
        }else{
            try {
                String roomName = jTextField1.getText().trim();
                client.sendJoin(roomName, player.getNickName());
            } catch (IOException e) {
                System.err.println("Client error: " + e.getMessage());
            }
        }
        
    }//GEN-LAST:event_joinButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try{
            client.sendExit();
        } catch (IOException e) {
            System.err.println("Client error: " + e.getMessage());
        }
    }//GEN-LAST:event_formWindowClosing
    @Override
    public void onLoginSuccess(){
    }
    @Override
    public void onLogupSuccess(){
    }
    @Override
    public void onJoinSuccess(){
        dispose();
        new GameBoard(client, player).setVisible(true);
    }
    @Override
    public void onMoveReceived(String move){}
    @Override
    public void onErrorReceived(String error){
        JOptionPane.showMessageDialog(this, error);
    }
    @Override
    public void onContinueCapture(String message){}
    @Override
    public void onGameOver(String result){}
    @Override
    public void onYourTurn(String turn){}
    @Override
    public void onStartGame(boolean turn, String name){}
    @Override
    public void onCaptureReceived(String message){}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton joinButton;
    // End of variables declaration//GEN-END:variables
}
